{"version":3,"sources":["src/components/component.js"],"names":[],"mappings":";;;;;;;;;;IAAqB,SAAS;AACjB,WADQ,SAAS,CAChB,iBAAiB,EAAe;QAAb,MAAM,yDAAG,EAAE;;0BADvB,SAAS;;AAE1B,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAI,CAAC,IAAI,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC;GACzC;;eAJkB,SAAS;;WAqBN,kCAAG;AACvB,aAAO,IAAI,CAAC;KACb;;;WAyBI,iBAAG;AACN,UAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;AACzB,aAAO,IAAI,CAAC;KACb;;;WAEO,kBAAC,KAAK,EAAE;AACd,UAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACjC,aAAO,IAAI,CAAC;KACb;;;WAEU,uBAAG;AACZ,aAAO,CAAC,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACzF,aAAO,IAAI,CAAC;KACb;;;WAEY,yBAAG;AACd,UAAI,EAAE,GAAG,UAAU,CAAC,kBAAkB,CAAC;AACvC,aAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAChB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,EAChC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CACpC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AACjB,aAAO,IAAI,CAAC;KACb;;;SAhEc,eAAG;AAChB,UAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACtB,YAAI,mBAAmB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnE,YAAI,mBAAmB,EAAE;AACvB,cAAI,CAAC,YAAY,GAAG,mBAAmB,CAAC;SACzC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;AACxB,cAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SAChE,MAAM;AACL,gBAAM,wDAAwD,CAAC;SAChE;OACF;;AAED,aAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;;SAMkB,eAAG;AACpB,UAAI,IAAI,CAAC,IAAI,CAAC,eAAe,KAAK,SAAS,EAAE;AAC3C,cAAM,sFAAsF,CAAC;OAC9F;AACD,aAAO,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC;KAC1C;;;SAEW,eAAG;AACb,aAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC;KACrD;;;SAES,eAAG;AACX,aAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;KAC1C;;;SAES,eAAG;AACX,aAAO,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KAChC;;;SAEU,eAAG;AACZ,aAAO,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC;KACpC;;;SA9CkB,SAAS;;;qBAAT,SAAS","file":"src/components/component.js","sourcesContent":["export default class Component {\n  constructor(ImplementationCls, config = {}) {\n    this.config = config;\n    this.impl = new ImplementationCls(this);\n  }\n\n  get componentEl() {\n    if (!this._componentEl) {\n      let componentElByConfig = this.getComponentElByConfig(this.config);\n      if (componentElByConfig) {\n        this._componentEl = componentElByConfig;\n      } else if (this.selector) {\n        this._componentEl = this.rootEl.element(by.css(this.selector));\n      } else {\n        throw 'Unable to get componentEl based on config or selector.';\n      }\n    }\n\n    return this._componentEl;\n  }\n\n  getComponentElByConfig() {\n    return null;\n  }\n\n  get defaultSelector() {\n    if (this.impl.defaultSelector === undefined) {\n      throw 'The library you use should define a defaultSelector on its Component implementations';\n    }\n    return this.impl.defaultSelector || null;\n  }\n\n  get selector() {\n    return this.config.selector || this.defaultSelector;\n  }\n\n  get rootEl() {\n    return this.config.rootEl || this.bodyEl;\n  }\n\n  get bodyEl() {\n    return element(by.css('body'));\n  }\n\n  get timeout() {\n    return this.config.timeout || 5000;\n  }\n\n  click() {\n    this.componentEl.click();\n    return this;\n  }\n\n  sendKeys(value) {\n    this.componentEl.sendKeys(value);\n    return this;\n  }\n\n  whenVisible() {\n    browser.wait(protractor.ExpectedConditions.visibilityOf(this.componentEl), this.timeout);\n    return this;\n  }\n\n  whenInvisible() {\n    var EC = protractor.ExpectedConditions;\n    browser.wait(EC.or(\n      EC.stalenessOf(this.componentEl),\n      EC.invisibilityOf(this.componentEl)\n    ), this.timeout);\n    return this;\n  }\n}\n"]}