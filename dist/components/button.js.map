{"version":3,"sources":["src/components/button.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;2BAAsB,gBAAgB;;;;IAEjB,MAAM;YAAN,MAAM;;WAAN,MAAM;0BAAN,MAAM;;+BAAN,MAAM;;;eAAN,MAAM;;WACH,gCAAC,MAAM,EAAE;AAC7B,UAAI,MAAM,CAAC,IAAI,EAAE;AACf,eAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;OACjC,MACI,IAAI,MAAM,CAAC,IAAI,EAAE;AACpB,eAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;OACvC;AACD,aAAO,IAAI,CAAC;KACb;;;WAEK,gBAAC,IAAI,EAAE;;;AACX,aAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAK;AACjE,eAAO,MAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU,EAAK;AACvD,iBAAO,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;SACtE,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAEW,sBAAC,IAAI,EAAE;;;AACjB,aAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,UAAC,QAAQ,EAAK;AACjE,eAAO,OAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU,EAAK;AACvD,iBAAO,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;SACtE,CAAC,CAAC;OACJ,CAAC,CAAC;KACJ;;;WAEY,uBAAC,QAAQ,EAAE;AACtB,UAAI,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;AACzC,cAAM,oDAAoD,CAAC;OAC5D;AACD,aAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;KAC1C;;;WAEY,uBAAC,QAAQ,EAAE;AACtB,UAAI,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE;AACzC,eAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;OAC1C;AACD,aAAO,QAAQ,CAAC,OAAO,EAAE,CAAC;KAC3B;;;SAvCkB,MAAM;;;qBAAN,MAAM","file":"src/components/button.js","sourcesContent":["import Component from './component.js';\n\nexport default class Button extends Component {\n  getComponentElByConfig(config) {\n    if (config.icon) {\n      return this.byIcon(config.icon);\n    }\n    else if (config.text) {\n      return this.byButtonText(config.text);\n    }\n    return null;\n  }\n\n  byIcon(icon) {\n    return this.rootEl.all(by.css(this.selector)).filter((buttonEl) => {\n      return this.getButtonIcon(buttonEl).then((buttonIcon) => {\n        return buttonIcon.toLowerCase().trim() === icon.toLowerCase().trim();\n      });\n    });\n  }\n\n  byButtonText(text) {\n    return this.rootEl.all(by.css(this.selector)).filter((buttonEl) => {\n      return this.getButtonText(buttonEl).then((buttonText) => {\n        return buttonText.toLowerCase().trim() === text.toLowerCase().trim();\n      });\n    });\n  }\n\n  getButtonIcon(buttonEl) {\n    if (this.impl.getButtonIcon === undefined) {\n      throw 'The library you use does not support getButtonIcon';\n    }\n    return this.impl.getButtonIcon(buttonEl);\n  }\n\n  getButtonText(buttonEl) {\n    if (this.impl.getButtonText !== undefined) {\n      return this.impl.getButtonText(buttonEl);\n    }\n    return buttonEl.getText();\n  }\n}\n"]}