{"version":3,"sources":["src/components/menu.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;2BAAsB,gBAAgB;;;;IAEjB,IAAI;YAAJ,IAAI;;WAAJ,IAAI;0BAAJ,IAAI;;+BAAJ,IAAI;;;eAAJ,IAAI;;WAYd,mBAAC,MAAM,EAAE;AAChB,UAAI,MAAM,CAAC,IAAI,EAAE;AACf,YAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;OACnC,MACI,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS,EAAE;AACnC,YAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;OACrC,MACI,IAAI,MAAM,CAAC,QAAQ,EAAE;AACxB,YAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;OAC3D,MACI;AACH,cAAM,yEAAyE,CAAC;OACjF;;AAED,aAAO,IAAI,CAAC;KACb;;;WAEe,0BAAC,KAAK,EAAE;AACtB,aAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC;KAC1C;;;WAEc,yBAAC,IAAI,EAAE;AACpB,aAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,UAAC,EAAE,EAAK;AACnC,eAAO,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,QAAQ,EAAK;AACrC,iBAAO,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;SACpE,CAAC,CAAC;OACJ,CAAC,CAAC,IAAI,CAAC,UAAC,aAAa,EAAK;AACzB,YAAI,aAAa,CAAC,MAAM,EAAE;AACxB,uBAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;SAC1B,MAAM;AACL,gBAAM,4DAA4D,CAAC;SACpE;OACF,CAAC,CAAC;KACJ;;;SA5CY,eAAG;AACd,aAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;KACxD;;;SAEe,eAAG;AACjB,UAAI,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE;AACxC,cAAM,2EAA2E,CAAC;OACnF;AACD,aAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;KAC/B;;;SAVkB,IAAI;;;qBAAJ,IAAI","file":"src/components/menu.js","sourcesContent":["import Container from './container.js';\n\nexport default class Menu extends Container {\n  get menuItems() {\n    return this.componentEl.all(by.css(this.itemSelector));\n  }\n\n  get itemSelector() {\n    if (this.impl.itemSelector === undefined) {\n      throw 'The library you use should define itemSelector on its Menu implementation';\n    }\n    return this.impl.itemSelector;\n  }\n\n  clickItem(config) {\n    if (config.text) {\n      this.clickItemByText(config.text);\n    }\n    else if (config.index !== undefined) {\n      this.clickItemByIndex(config.index);\n    }\n    else if (config.selector) {\n      this.componentEl.element(by.css(config.selector)).click();\n    }\n    else {\n      throw 'Menu.clickItem() expects a config with either text, index or a selector';\n    }\n\n    return this;\n  }\n\n  clickItemByIndex(index) {\n    return this.menuItems.get(index).click();\n  }\n\n  clickItemByText(text) {\n    return this.menuItems.filter((el) => {\n      return el.getText().then((itemText) => {\n        return itemText.toLowerCase().trim() === text.toLowerCase().trim();\n      });\n    }).then((filteredItems) => {\n      if (filteredItems.length) {\n        filteredItems[0].click();\n      } else {\n        throw 'Trying to click on a menu item by text that does not exist';\n      }\n    });\n  }\n}\n"]}